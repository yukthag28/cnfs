Main.java

package lab3;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Select a printer:");
            System.out.println("1. Dot-Matrix Printer");
            System.out.println("2. LaserJet Printer");
            System.out.println("3. Exit");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    Printer dotMatrixPrinter = new DotMatrix();
                    dotMatrixPrinter.configuration();
                    dotMatrixPrinter.display();
                    break;

                case 2:
                    Printer laserjetPrinter = new LaserJet();
                    laserjetPrinter.configuration();
                    laserjetPrinter.display();
                    break;

                case 3:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        }
    }
}

Printer.java

package lab3;

abstract class Printer {
    abstract void configuration();
    abstract void display();
}

class DotMatrix extends Printer {
    void configuration() {
        System.out.println("Dot-Matrix Printer: 9-pin print head, low resolution");
    }

    void display() {
        System.out.println("Printing in progress...");
    }
}

class LaserJet extends Printer {
    void configuration() {
        System.out.println("LaserJet Printer: Laser technology, high resolution");
    }

    void display() {
        System.out.println("Printing in progress...");
    }
}


3.b

package lab3b;
interface Vehicle {
 void drive();
}

abstract class AbstractVehicle implements Vehicle {
 public abstract void drive();
}

class Car extends AbstractVehicle {
 @Override
 public void drive() {
     System.out.println("Car is being driven!");
 }
}

class Motorcycle extends AbstractVehicle {
 @Override
 public void drive() {
     System.out.println("Motorcycle is being ridden!");
 }
}

public class Main {
 public static void main(String[] args) {
     Vehicle vehicle1 = new Car();
     Vehicle vehicle2 = new Motorcycle();

     vehicle1.drive(); // Output: Car is being driven!
     vehicle2.drive(); // Output: Motorcycle is being ridden!
 }
}
